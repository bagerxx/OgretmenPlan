// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Sınıf seviyeleri (1. sınıf, 2. sınıf vb.)
model Sinif {
  id          String @id @default(cuid())
  seviye      Int    @unique // 1, 2, 3, 4, 5 (sınıf seviyeleri)
  aciklama    String // "1. Sınıf", "2. Sınıf" vb.
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // İlişkiler
  dersler     Ders[]
  
  @@map("sinif")
}

// Dersler (her sınıf seviyesi için ayrı dersler)
model Ders {
  id              String  @id @default(cuid())
  ad              String  // "Matematik", "Türkçe" vb.
  haftalikSaat    Int     // Dersin haftalık saati
  sinifId         String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  // İlişkiler
  sinif           Sinif    @relation(fields: [sinifId], references: [id], onDelete: Cascade)
  temalar         Tema[]
  @@unique([ad, sinifId]) // Aynı sınıfta aynı ders adı olamaz
  @@map("ders")
}

// Temalar (derslerin temel konuları)
model Tema {
  id          String @id @default(cuid())
  ad          String // "Sayılar", "Geometri" vb.
  sira        Int    // Tema sırası
  saat        Int?   // Tema süresi (saat)
  dersId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // İlişkiler
  ders        Ders     @relation(fields: [dersId], references: [id], onDelete: Cascade)
  // Tekil alanlar (ayrı model yerine sadece alan olarak tutulur)
  olcmeDegerlendirme     String?
  sosyalDuygusalBeceriler String?
  degerler               String?
  okurYazarlikBecerileri String?
  // Hiyerarşik alan: konu çerçeveleri ve altındaki yapılar ilişkisel kalır
  konuCerceveleri KonuCercevesi[]
  
  @@unique([dersId, sira])
  @@map("tema")
}



// Yıl tanımları
model Yil {
  id          String @id @default(cuid())
  yil         Int    @unique // 2025, 2026 vb.
  aciklama    String // "2025-2026 Eğitim Öğretim Yılı"
  baslamaTarihi DateTime
  bitisTarihi DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // İlişkiler
  haftalar    Hafta[]
  
  @@map("yil")
}

// Hafta aralıkları (her yıl için tanımlanır)
model Hafta {
  id          String @id @default(cuid())
  haftaNo     Int    // 1, 2, 3... (yıl içindeki hafta sırası)
  baslamaTarihi DateTime
  bitisTarihi DateTime
  tip         HaftaTipi @default(DERS) // DERS, TATIL, SINAV, SIB_NAV
  donem       DonemTipi? // BIRINCI_DONEM, IKINCI_DONEM (opsiyonel)
  ad          String  @default("") // Örn: "8-12 eylül"
  yilId       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // İlişkiler
  yil         Yil      @relation(fields: [yilId], references: [id], onDelete: Cascade)
  
  @@unique([yilId, haftaNo])
  @@map("hafta")
}

// Hafta tipleri
enum HaftaTipi {
  DERS     // Normal ders haftası
  TATIL    // Tatil haftası
  SINAV    // Sınav haftası
}

// Dönem tipleri
enum DonemTipi {
  BIRINCI_DONEM   // 1. Dönem
  IKINCI_DONEM    // 2. Dönem
}



// Plan tipleri
enum PlanTipi {
  YILLIK    // Yıllık plan
  HAFTALIK  // Haftalık plan  
  GUNLUK    // Günlük plan
}


// (Not: Ölçme değerlendirme, sosyal-duygusal öğrenme becerileri, değerler ve okur-yazarlık becerileri Tema üzerinde tekil alanlar olarak tutulur.)

// Tema'ya bağlı konu çerçeveleri
model KonuCercevesi {
  id      String @id @default(cuid())
  temaId  String
  ad      String

  tema    Tema   @relation(fields: [temaId], references: [id], onDelete: Cascade)
  ogrenmeCiktilari OgrenmeCiktisi[]

  @@map("konu_cercevesi")
}

// Konu çerçevelerine bağlı öğrenme çıktıları
model OgrenmeCiktisi {
  id               String @id @default(cuid())
  konuCercevesiId  String
  ad               String

  konuCercevesi    KonuCercevesi @relation(fields: [konuCercevesiId], references: [id], onDelete: Cascade)
  surecBilesenleri SurecBileseni[]

  @@map("ogrenme_ciktisi")
}

// Öğrenme çıktısına bağlı süreç bileşenleri
model SurecBileseni {
  id               String @id @default(cuid())
  ogrenmeCiktisiId String
  ad               String

  ogrenmeCiktisi   OgrenmeCiktisi @relation(fields: [ogrenmeCiktisiId], references: [id], onDelete: Cascade)

  @@map("surec_bileseni")
}

