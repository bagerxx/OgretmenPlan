<!DOCTYPE html>
<html lang="tr">
<head>
  <meta charset="UTF-8" />
  <title>Admin - Ders / Tema / Beceri - Kazanım Yönetimi</title>
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <style>
    body { font-family: system-ui, Arial, sans-serif; margin:0; padding:0; background:#f1f5f9; color:#0f172a; }
    header { background:#1e3a8a; color:#fff; padding:16px 24px; }
    h1 { margin:0; font-size:20px; }
    main { padding:24px; }
    .panel { background:#fff; border-radius:8px; padding:20px; margin-bottom:24px; box-shadow:0 2px 4px rgba(0,0,0,0.06); }
    .panel h2 { margin-top:0; font-size:18px; }
    select, input[type=text], input[type=number] { padding:10px 12px; border:1px solid #cbd5e1; border-radius:6px; width:100%; box-sizing:border-box; font-size:14px; }
    label { display:block; font-size:13px; font-weight:600; margin-bottom:6px; }
    form { display:grid; gap:12px; }
    button { background:#2563eb; color:#fff; padding:10px 16px; border:none; border-radius:6px; cursor:pointer; font-size:14px; font-weight:600; }
    button.secondary { background:#0d9488; }
    button.danger { background:#dc2626; }
    table { border-collapse:collapse; width:100%; font-size:14px; }
    th, td { padding:8px 10px; border-bottom:1px solid #e2e8f0; text-align:left; }
    th { background:#1e40af; color:#fff; position:sticky; top:0; }
    tbody tr:hover { background:#f1f5f9; }
    .flex { display:flex; gap:12px; }
    .col { flex:1; }
    .muted { color:#64748b; font-size:12px; }
    .badge { display:inline-block; background:#e2e8f0; padding:2px 6px; border-radius:4px; font-size:11px; margin-right:4px; }
    .row-actions { display:flex; gap:6px; }
    .divider { height:1px; background:#e2e8f0; margin:20px 0; }
    .inline { display:inline-block; }
    .error { background:#fee2e2; color:#991b1b; padding:8px 12px; border-radius:6px; margin-bottom:12px; }
    .success { background:#dcfce7; color:#166534; padding:8px 12px; border-radius:6px; margin-bottom:12px; }
  </style>
</head>
<body>
  <header>
    <h1>Admin Paneli</h1>
  </header>
  <main>
    <% if (flash && flash.error) { %>
      <div class="error"><%= flash.error %></div>
    <% } %>
    <% if (flash && flash.success) { %>
      <div class="success"><%= flash.success %></div>
    <% } %>

    <div class="panel">
      <h2>Ders Seç</h2>
      <label for="dersId">Dersler</label>
      <select id="dersId" name="dersId">
        <option value="">-- Ders seçin --</option>
        <% dersler.forEach(d=> { %>
          <option value="<%= d.id %>" <%= seciliDers && seciliDers.id === d.id ? 'selected' : '' %>><%= d.sinif.seviye %>. Sınıf - <%= d.ad %></option>
        <% }) %>
      </select>
      <p class="muted">Bir ders seçerek o derse bağlı temaları, becerileri ve kazanımları yönetebilirsiniz.</p>
    </div>

    <div class="panel">
      <h2>Tema Ekle</h2>
      <form id="temaForm" method="POST" action="/api/admin/tema">
        <input id="temaDersId" type="hidden" name="dersId" value="<%= seciliDers?.id || '' %>" />
        <label for="temaAd">Tema Adı</label>
        <input id="temaAd" name="ad" type="text" required />
        <label for="temaSira">Sıra</label>
        <input id="temaSira" name="sira" type="number" min="1" required />
        <label for="temaSaat">Saat Süresi</label>
        <input id="temaSaat" name="saat" type="number" min="1" />
        <button type="submit">Tema Oluştur</button>
      </form>
    </div>

    <div class="panel">
      <h2>Konu Çerçevesi Ekle</h2>
      <form id="konuCercevesiForm" method="POST" action="/api/admin/konu-cercevesi">
        <input type="hidden" name="dersId" value="<%= seciliDers?.id || '' %>" />
        <label for="konuCercevesiTema">Tema</label>
        <select id="konuCercevesiTema" name="temaId" required>
          <option value="">-- Tema seçin --</option>
          <!-- Temalar JS ile yüklenecek -->
        </select>
        <label for="konuCercevesiAd">Konu Çerçevesi Adı</label>
        <input id="konuCercevesiAd" name="ad" type="text" required />
        <button type="submit">Konu Çerçevesi Ekle</button>
      </form>
    </div>

    <div class="panel">
      <h2>Öğrenme Çıktısı Ekle</h2>
      <form id="ogrenmeCiktisiForm" method="POST" action="/api/admin/ogrenme-ciktisi">
        <input type="hidden" name="dersId" value="<%= seciliDers?.id || '' %>" />
        <label for="ogrenmeCiktisiKonuCercevesi">Konu Çerçevesi</label>
        <select id="ogrenmeCiktisiKonuCercevesi" name="konuCercevesiId" required>
          <option value="">-- Konu çerçevesi seçin --</option>
          <!-- Konu çerçeveleri JS ile yüklenecek -->
        </select>
        <label for="ogrenmeCiktisiAd">Öğrenme Çıktısı Adı</label>
        <input id="ogrenmeCiktisiAd" name="ad" type="text" required />
        <button type="submit">Öğrenme Çıktısı Ekle</button>
      </form>
    </div>

    <div class="panel">
      <h2>Süreç Bileşeni Ekle</h2>
      <form id="surecBileseniForm" method="POST" action="/api/admin/surec-bileseni">
        <input type="hidden" name="dersId" value="<%= seciliDers?.id || '' %>" />
        <label for="surecBileseniOgrenmeCiktisi">Öğrenme Çıktısı</label>
        <select id="surecBileseniOgrenmeCiktisi" name="ogrenmeCiktisiId" required>
          <option value="">-- Öğrenme çıktısı seçin --</option>
          <!-- Öğrenme çıktıları JS ile yüklenecek -->
        </select>
        <label for="surecBileseniAd">Süreç Bileşeni Adı</label>
        <input id="surecBileseniAd" name="ad" type="text" required />
        <button type="submit">Süreç Bileşeni Ekle</button>
      </form>
    </div>

    <div class="panel">
      <h2>Tema Alanlarını Düzenle</h2>
      <p class="muted">Bu alanları serbest metin olarak girebilirsiniz. Boş bırakırsanız değişmez.</p>
      <form id="temaAlanForm" method="POST" action="/api/admin/tema-guncelle">
        <input type="hidden" name="dersId" value="<%= seciliDers?.id || '' %>" />
        <label for="temaSecim">Tema</label>
        <select id="temaSecim" name="temaId" required>
          <option value="">-- Tema seçin --</option>
          <!-- Temalar JS ile yüklenecek -->
        </select>
  <label for="temaAdGuncelle">Tema Adı</label>
  <input id="temaAdGuncelle" name="ad" type="text" />
  <label for="temaSiraGuncelle">Sıra</label>
  <input id="temaSiraGuncelle" name="sira" type="number" min="1" />
  <label for="temaSaatGuncelle">Saat Süresi</label>
  <input id="temaSaatGuncelle" name="saat" type="number" min="1" />
        <label for="olcmeDegerlendirme">Ölçme-Değerlendirme (serbest metin)</label>
        <textarea id="olcmeDegerlendirme" name="olcmeDegerlendirme" rows="3" placeholder="Ölçme yaklaşımı..."></textarea>
        <label for="sosyalDuygusalBeceriler">Sosyal - Duygusal Öğrenme Becerileri</label>
        <textarea id="sosyalDuygusalBeceriler" name="sosyalDuygusalBeceriler" rows="4" placeholder="Sosyal beceriler buraya..."></textarea>
        <label for="degerler">Değerler</label>
        <textarea id="degerler" name="degerler" rows="4" placeholder="Değerler buraya..."></textarea>
        <label for="okurYazarlikBecerileri">Okur Yazarlık Becerileri</label>
        <textarea id="okurYazarlikBecerileri" name="okurYazarlikBecerileri" rows="4" placeholder="Okur yazarlık becerileri buraya..."></textarea>
        <button type="submit">Kaydet</button>
      </form>
    </div>

    <div class="panel">
      <h2>Temalar ve İçerikler</h2>
      <div id="temalarList">
        <% if (!temalar.length) { %>
          <p class="muted">Henüz tema yok.</p>
        <% } else { %>
          <% temalar.forEach(t => { %>
            <div style="margin-bottom:16px;">
              <strong><%= t.sira %>. Tema: <%= t.ad %></strong>
              <% if (t.saat) { %> (<%= t.saat %> saat)<% } %>
              <div class="muted">Ölçme-Değerlendirme:</div>
              <div><%- t.olcmeDegerlendirme || '<span class="muted">—</span>' %></div>
              <div class="muted">Sosyal - Duygusal Öğrenme Becerileri:</div>
              <div><%- t.sosyalDuygusalBeceriler || '<span class="muted">—</span>' %></div>
              <div class="muted">Değerler:</div>
              <div><%- t.degerler || '<span class="muted">—</span>' %></div>
              <div class="muted">Okur Yazarlık Becerileri:</div>
              <div><%- t.okurYazarlikBecerileri || '<span class="muted">—</span>' %></div>
              
              <% if (t.konuCerceveleri && t.konuCerceveleri.length > 0) { %>
                <div class="muted">Konu Çerçeveleri:</div>
                <% t.konuCerceveleri.forEach((kc, kcIndex) => { %>
                  <div style="margin-left: 16px; margin-bottom: 8px;">
                    <strong>• <%= kc.ad %></strong>
                    <% if (kc.ogrenmeCiktilari && kc.ogrenmeCiktilari.length > 0) { %>
                      <div style="margin-left: 16px;">
                        <div class="muted">Öğrenme Çıktıları:</div>
                        <% kc.ogrenmeCiktilari.forEach((oc, ocIndex) => { %>
                          <div style="margin-left: 16px; margin-bottom: 4px;">
                            <span>○ <%= oc.ad %></span>
                            <% if (oc.surecBilesenleri && oc.surecBilesenleri.length > 0) { %>
                              <div style="margin-left: 16px;">
                                <div class="muted">Süreç Bileşenleri:</div>
                                <% oc.surecBilesenleri.forEach((sb, sbIndex) => { %>
                                  <div style="margin-left: 16px;">▪ <%= sb.ad %></div>
                                <% }) %>
                              </div>
                            <% } %>
                          </div>
                        <% }) %>
                      </div>
                    <% } %>
                  </div>
                <% }) %>
              <% } %>
              
              <div class="divider"></div>
            </div>
          <% }) %>
        <% } %>
      </div>
    </div>

    <script>
      const dersSelect = document.getElementById('dersId');
      const temaSecim = document.getElementById('temaSecim');
      const temaDersId = document.getElementById('temaDersId');
      const temalarList = document.getElementById('temalarList');
      const temaAdGuncelle = document.getElementById('temaAdGuncelle');
  const temaSiraGuncelle = document.getElementById('temaSiraGuncelle');
      const temaSaatGuncelle = document.getElementById('temaSaatGuncelle');
      const olcmeDegerlendirme = document.getElementById('olcmeDegerlendirme');
      const sosyalDuygusalBeceriler = document.getElementById('sosyalDuygusalBeceriler');
      const degerler = document.getElementById('degerler');
      const okurYazarlikBecerileri = document.getElementById('okurYazarlikBecerileri');

      // Yeni form elementleri
      const konuCercevesiTema = document.getElementById('konuCercevesiTema');
      const ogrenmeCiktisiKonuCercevesi = document.getElementById('ogrenmeCiktisiKonuCercevesi');
      const surecBileseniOgrenmeCiktisi = document.getElementById('surecBileseniOgrenmeCiktisi');

      let currentTemalar = [];

      async function loadTemalar(dersId) {
        if (!dersId) {
          temaSecim.innerHTML = '<option value="">-- Tema seçin --</option>';
          konuCercevesiTema.innerHTML = '<option value="">-- Tema seçin --</option>';
          ogrenmeCiktisiKonuCercevesi.innerHTML = '<option value="">-- Konu çerçevesi seçin --</option>';
          surecBileseniOgrenmeCiktisi.innerHTML = '<option value="">-- Öğrenme çıktısı seçin --</option>';
          temalarList.innerHTML = '<p class="muted">Henüz tema yok.</p>';
          temaDersId.value = '';
          currentTemalar = [];
          
          // Tüm formlardaki hidden dersId'leri güncelle
          updateHiddenDersIds('');
          return;
        }
        const res = await fetch('/api/admin/temalar?dersId=' + dersId);
        const json = await res.json();
        const temalar = json.temalar || [];
        currentTemalar = temalar;
        
        // Tema seçim alanlarını güncelle
        const temaOptions = '<option value="">-- Tema seçin --</option>' + temalar.map(t => `<option value="${t.id}">${t.sira}. ${t.ad}</option>`).join('');
        temaSecim.innerHTML = temaOptions;
        konuCercevesiTema.innerHTML = temaOptions;
        
        // Konu çerçevesi ve öğrenme çıktısı seçimlerini güncelle
        updateKonuCerceveleri(temalar);
        
        temaDersId.value = dersId;
        updateHiddenDersIds(dersId);

        // Eğer URL'de temaId varsa (veya server tarafından gönderilen selectedTemaId),
        // options yüklendikten sonra selects için seçimi uygula ve gerekli olayları tetikle.
        try {
          const urlTemaId = new URLSearchParams(window.location.search).get('temaId') || "<%= selectedTemaId || '' %>";
          if (urlTemaId) {
            // temaSecim (tema alanlarını dolduran ana select) için seçimi ayarla ve change tetikle
            const temaOption = temaSecim.querySelector(`option[value="${urlTemaId}"]`);
            if (temaOption) {
              temaSecim.value = urlTemaId;
              temaSecim.dispatchEvent(new Event('change'));
            }

            // konuCercevesi formundaki tema select'i için de değeri ayarla
            const kcOption = konuCercevesiTema.querySelector(`option[value="${urlTemaId}"]`);
            if (kcOption) {
              konuCercevesiTema.value = urlTemaId;
              // güncel URL'yi temaid ile senkron tut
              const newUrl = new URL(window.location);
              newUrl.searchParams.set('temaId', urlTemaId);
              window.history.replaceState({}, '', newUrl);
            }
          }
        } catch (err) {
          // ignore URL parsing errors silently
        }
        
        // render list
        if (!temalar.length) {
          temalarList.innerHTML = '<p class="muted">Henüz tema yok.</p>';
        } else {
          temalarList.innerHTML = temalar.map(t => renderTemaHtml(t)).join('');
        }
      }

      function updateHiddenDersIds(dersId) {
        document.querySelectorAll('input[name="dersId"][type="hidden"]').forEach(input => {
          input.value = dersId;
        });
      }

      function updateKonuCerceveleri(temalar) {
        let konuCerceveleri = [];
        let ogrenmeCiktilari = [];
        
        temalar.forEach(tema => {
          if (tema.konuCerceveleri) {
            tema.konuCerceveleri.forEach(kc => {
              konuCerceveleri.push({ id: kc.id, ad: `${tema.ad} > ${kc.ad}` });
              if (kc.ogrenmeCiktilari) {
                kc.ogrenmeCiktilari.forEach(oc => {
                  ogrenmeCiktilari.push({ id: oc.id, ad: `${tema.ad} > ${kc.ad} > ${oc.ad}` });
                });
              }
            });
          }
        });
        
        ogrenmeCiktisiKonuCercevesi.innerHTML = '<option value="">-- Konu çerçevesi seçin --</option>' + 
          konuCerceveleri.map(kc => `<option value="${kc.id}">${kc.ad}</option>`).join('');
        
        surecBileseniOgrenmeCiktisi.innerHTML = '<option value="">-- Öğrenme çıktısı seçin --</option>' + 
          ogrenmeCiktilari.map(oc => `<option value="${oc.id}">${oc.ad}</option>`).join('');
      }

      function renderTemaHtml(t) {
        let konuCerceveleriHtml = '';
        if (t.konuCerceveleri && t.konuCerceveleri.length > 0) {
          konuCerceveleriHtml = `
            <div class="muted">Konu Çerçeveleri:</div>
            ${t.konuCerceveleri.map(kc => `
              <div style="margin-left: 16px; margin-bottom: 8px;">
                <strong>• ${kc.ad}</strong>
                ${kc.ogrenmeCiktilari && kc.ogrenmeCiktilari.length > 0 ? `
                  <div style="margin-left: 16px;">
                    <div class="muted">Öğrenme Çıktıları:</div>
                    ${kc.ogrenmeCiktilari.map(oc => `
                      <div style="margin-left: 16px; margin-bottom: 4px;">
                        <span>○ ${oc.ad}</span>
                        ${oc.surecBilesenleri && oc.surecBilesenleri.length > 0 ? `
                          <div style="margin-left: 16px;">
                            <div class="muted">Süreç Bileşenleri:</div>
                            ${oc.surecBilesenleri.map(sb => `<div style="margin-left: 16px;">▪ ${sb.ad}</div>`).join('')}
                          </div>
                        ` : ''}
                      </div>
                    `).join('')}
                  </div>
                ` : ''}
              </div>
            `).join('')}
          `;
        }
        
        return `
          <div style="margin-bottom:16px;">
            <strong>${t.sira}. Tema: ${t.ad}</strong>
            ${t.saat ? ` (${t.saat} saat)` : ''}
            <div class="muted">Ölçme-Değerlendirme:</div>
            <div>${t.olcmeDegerlendirme || '<span class="muted">—</span>'}</div>
            <div class="muted">Sosyal - Duygusal Öğrenme Becerileri:</div>
            <div>${t.sosyalDuygusalBeceriler || '<span class="muted">—</span>'}</div>
            <div class="muted">Değerler:</div>
            <div>${t.degerler || '<span class="muted">—</span>'}</div>
            <div class="muted">Okur Yazarlık Becerileri:</div>
            <div>${t.okurYazarlikBecerileri || '<span class="muted">—</span>'}</div>
            ${konuCerceveleriHtml}
            <div class="divider"></div>
          </div>
        `;
      }

      // Tema seçilince form alanlarını doldur
      temaSecim.addEventListener('change', (e) => {
        const temaId = e.target.value;
        
        // URL'yi güncelle ki sayfa yenilendiğinde tema seçimi korunsun
        const urlParams = new URLSearchParams(window.location.search);
        if (temaId) {
          urlParams.set('temaId', temaId);
        } else {
          urlParams.delete('temaId');
        }
        const newUrl = new URL(window.location);
        newUrl.search = urlParams.toString();
        window.history.replaceState({}, '', newUrl);
        
        if (!temaId) {
          // Form alanlarını temizle
          temaAdGuncelle.value = '';
          if (temaSiraGuncelle) temaSiraGuncelle.value = '';
          temaSaatGuncelle.value = '';
          olcmeDegerlendirme.value = '';
          sosyalDuygusalBeceriler.value = '';
          degerler.value = '';
          okurYazarlikBecerileri.value = '';
          return;
        }
        
        const tema = currentTemalar.find(t => t.id === temaId);
        if (tema) {
          temaAdGuncelle.value = tema.ad || '';
          if (temaSiraGuncelle) temaSiraGuncelle.value = tema.sira || '';
          temaSaatGuncelle.value = tema.saat || '';
          olcmeDegerlendirme.value = tema.olcmeDegerlendirme || '';
          sosyalDuygusalBeceriler.value = tema.sosyalDuygusalBeceriler || '';
          degerler.value = tema.degerler || '';
          okurYazarlikBecerileri.value = tema.okurYazarlikBecerileri || '';
        }
      });

      // Konu çerçevesi formunda tema seçimi değiştiğinde URL'yi güncelle
      konuCercevesiTema.addEventListener('change', (e) => {
        const temaId = e.target.value;
        const urlParams = new URLSearchParams(window.location.search);
        if (temaId) {
          urlParams.set('temaId', temaId);
        } else {
          urlParams.delete('temaId');
        }
        const newUrl = new URL(window.location);
        newUrl.search = urlParams.toString();
        window.history.replaceState({}, '', newUrl);
      });

      // init
      (function(){
        // URL'den dersId ve temaId parametrelerini al
        const urlParams = new URLSearchParams(window.location.search);
        const urlDersId = urlParams.get('dersId');
        const urlTemaId = urlParams.get('temaId');
        const initial = urlDersId || "<%= seciliDers ? seciliDers.id : '' %>";
        const selectedTemaId = urlTemaId || "<%= selectedTemaId || '' %>";
        
        if (initial) {
          loadTemalar(initial).then(() => {
            // Tema seçimini yap
            if (selectedTemaId && temaSecim) {
              temaSecim.value = selectedTemaId;
              // Tema seçimi eventini manuel tetikle
              const event = new Event('change');
              temaSecim.dispatchEvent(event);
            }
            
            // Konu çerçevesi formunda da tema seçimini yap
            if (selectedTemaId && konuCercevesiTema) {
              konuCercevesiTema.value = selectedTemaId;
            }
            // temaSiraGuncelle'ü init sonrası güncelle (eğer varsa)
            if (selectedTemaId && typeof temaSiraGuncelle !== 'undefined' && temaSiraGuncelle) {
              const tema = currentTemalar.find(t => t.id === selectedTemaId);
              if (tema) temaSiraGuncelle.value = tema.sira || '';
            }
          });
          dersSelect.value = initial;
        }
      })();

      dersSelect.addEventListener('change', (e) => {
        const id = e.target.value;
        loadTemalar(id);
        // URL'yi güncelle ki sayfa yenilendiğinde seçim korunsin
        if (id) {
          const newUrl = new URL(window.location);
          newUrl.searchParams.set('dersId', id);
          // Ders değiştiğinde tema seçimini temizle
          newUrl.searchParams.delete('temaId');
          window.history.replaceState({}, '', newUrl);
        } else {
          const newUrl = new URL(window.location);
          newUrl.searchParams.delete('dersId');
          newUrl.searchParams.delete('temaId');
          window.history.replaceState({}, '', newUrl);
        }
      });
    </script>
  </main>
</body>
</html>
